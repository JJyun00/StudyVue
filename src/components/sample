<template>
  <div>
    <!-- 달력날짜선택 -->
    <div>
      <input type="date" max="2022-10-26" @input="startnum = $event.target.value"/>
      ~<input type="date" min="" max="2022-10-26" @input="endnum = $event.target.value"/>
      <button type="button" @click="searchall">보기</button>
    </div>

    <div v-if='view === true'>
      <h2>전체 결과 수 : {{ totalCount }}</h2>
      <hr>
      <!-- 날짜검색 -->
      <div>
        <input type="date" :min="startnum" :max="endnum" @input="searchdate = $event.target.value"/>
        <button type="button" @click="fn_showAll">전체보기</button>
        <button type="button" @click="search">검색</button>
      </div> 
      
      <div v-if="searchArray.length<1">
          <p>{{ empty }}</p>
      </div>
      <div v-for="item in searchArray" :key="item.createDt">
          <div>
              <p>기준일 : {{ item.stateDt }}</p>
              <p>확진자 수 : {{ item.decideCnt }}</p>
              <p>사망자 수 : {{ item.deathCnt }}</p>
              <hr>
          </div>
      </div>        
      
    </div>

    
  </div>
</template>

<script>
import axios from 'axios'

export default {
name: 'HelloWorld',

filters:{
  searchFilter: function(){

  }
},

data() {
  return {
    view: true,
    totalCount: '',
    array:'',
    searchArray:'',
    showAll:true,
    empty:'is Empty!!',
    isEmpty:true,
    // 날짜검색
    state_Dt:'',
    decide_Cnt:'',
    death_Cnt:'',
    startnum:'',
    endnum:'',
    searchC:''
  }
},

  methods: {
    searchall() {
      let url = 'http://openapi.data.go.kr/openapi/service/rest/Covid19/getCovid19InfStateJson?'
      let key = 'serviceKey=D%2FO%2Bxhp4RTql%2Fgcl1JK12cV%2BaW0CyCHsEAmjP%2F%2BrzTOVlp9OW1v55KtZYWihwA%2BkvoNw5Yl4Az46V8cu7t99fg%3D%3D'
      let param = '&pageNo=1&numOfRows=10'
      let start = '&startCreateDt='+ this.startnum
      let end = '&endCreateDt=' + this.endnum

      const lv_Vm = this
      axios.get(url + key + param + start + end)
      .then((result) => {
        console.log(result.data)
        if(result.data.response.body.items.length < 1) {
          lv_Vm.fn_isEmpty()
        }
        lv_Vm.totalCount = result.data.response.body.totalCount
        lv_Vm.array= result.data.response.body.items.item
        lv_Vm.searchArray = [...lv_Vm.array]
        lv_Vm.view = true
        console.log(result)
      })

      .catch((error) => {
        console.log(error)
      })
    },

    search() {
      // 초기화
      this.searchArray = []
      this.isEmpty = false

      for(let i=0; i<this.array.length; i++){
        if(this.searchdate.split('-').join('') === this.array[i].stateDt.toString()){
            this.searchArray.push(this.array[i])
        }
      }

      if(this.searchArray.length < 1) {
          this.isEmpty = true
      }
    },
    fn_showAll() {
      this.searchArray = this.array

    }
  }
}
</script>

<style scoped>
.searchC { 
  color: red;
}
